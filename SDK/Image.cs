//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace se.smartid {

public class Image : global::System.IDisposable {
  private global::System.Runtime.InteropServices.SafeHandle swigCPtr;
  protected bool swigCMemOwn;

  internal Image(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::Microsoft.Win32.SafeHandles.SafeWaitHandle(cPtr, false);
  }

  internal static global::System.Runtime.InteropServices.SafeHandle getCPtr(Image obj) {
    return (obj == null) ? new global::Microsoft.Win32.SafeHandles.SafeWaitHandle(global::System.IntPtr.Zero, false) : obj.swigCPtr;
  }

  ~Image() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr != null && swigCPtr.DangerousGetHandle() != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          csSmartIdEnginePINVOKE.delete_Image(swigCPtr.DangerousGetHandle());
        }
        swigCPtr = new global::Microsoft.Win32.SafeHandles.SafeWaitHandle(global::System.IntPtr.Zero, false);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Image() : this(csSmartIdEnginePINVOKE.new_Image__SWIG_0(), true) {
  }

  public Image(string image_filename, int max_width, int max_height) : this(csSmartIdEnginePINVOKE.new_Image__SWIG_1(image_filename, max_width, max_height), true) {
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public Image(string image_filename, int max_width) : this(csSmartIdEnginePINVOKE.new_Image__SWIG_2(image_filename, max_width), true) {
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public Image(string image_filename) : this(csSmartIdEnginePINVOKE.new_Image__SWIG_3(image_filename), true) {
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public Image(byte[] data, uint data_length, int width, int height, int stride, int channels) : this(csSmartIdEnginePINVOKE.new_Image__SWIG_4(data, data_length, width, height, stride, channels), true) {
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public Image(byte[] yuv_data, uint yuv_data_length, int width, int height) : this(csSmartIdEnginePINVOKE.new_Image__SWIG_5(yuv_data, yuv_data_length, width, height), true) {
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public Image(Image copy) : this(csSmartIdEnginePINVOKE.new_Image__SWIG_6(Image.getCPtr(copy).DangerousGetHandle()), true) {
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Save(string image_filename) {
    csSmartIdEnginePINVOKE.Image_Save(swigCPtr.DangerousGetHandle(), image_filename);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public int GetRequiredBufferLength() {
    int ret = csSmartIdEnginePINVOKE.Image_GetRequiredBufferLength(swigCPtr.DangerousGetHandle());
    return ret;
  }

  public int CopyToBuffer(byte[] out_buffer, int buffer_length) {
    int ret = csSmartIdEnginePINVOKE.Image_CopyToBuffer(swigCPtr.DangerousGetHandle(), out_buffer, buffer_length);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double EstimateFocusScore(double quantile) {
    double ret = csSmartIdEnginePINVOKE.Image_EstimateFocusScore__SWIG_0(swigCPtr.DangerousGetHandle(), quantile);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double EstimateFocusScore() {
    double ret = csSmartIdEnginePINVOKE.Image_EstimateFocusScore__SWIG_1(swigCPtr.DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetRequiredBase64BufferLength() {
    int ret = csSmartIdEnginePINVOKE.Image_GetRequiredBase64BufferLength(swigCPtr.DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int CopyBase64ToBuffer(byte[] out_buffer, int buffer_length) {
    int ret = csSmartIdEnginePINVOKE.Image_CopyBase64ToBuffer(swigCPtr.DangerousGetHandle(), out_buffer, buffer_length);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string GetBase64String() {
    string ret = csSmartIdEnginePINVOKE.Image_GetBase64String(swigCPtr.DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Clear() {
    csSmartIdEnginePINVOKE.Image_Clear(swigCPtr.DangerousGetHandle());
  }

  public int GetWidth() {
    int ret = csSmartIdEnginePINVOKE.Image_GetWidth(swigCPtr.DangerousGetHandle());
    return ret;
  }

  public int GetHeight() {
    int ret = csSmartIdEnginePINVOKE.Image_GetHeight(swigCPtr.DangerousGetHandle());
    return ret;
  }

  public int GetStride() {
    int ret = csSmartIdEnginePINVOKE.Image_GetStride(swigCPtr.DangerousGetHandle());
    return ret;
  }

  public int GetChannels() {
    int ret = csSmartIdEnginePINVOKE.Image_GetChannels(swigCPtr.DangerousGetHandle());
    return ret;
  }

  public bool IsMemoryOwner() {
    bool ret = csSmartIdEnginePINVOKE.Image_IsMemoryOwner(swigCPtr.DangerousGetHandle());
    return ret;
  }

  public void ForceMemoryOwner() {
    csSmartIdEnginePINVOKE.Image_ForceMemoryOwner(swigCPtr.DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Resize(int new_width, int new_height) {
    csSmartIdEnginePINVOKE.Image_Resize(swigCPtr.DangerousGetHandle(), new_width, new_height);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Crop(Quadrangle quad) {
    csSmartIdEnginePINVOKE.Image_Crop__SWIG_0(swigCPtr.DangerousGetHandle(), Quadrangle.getCPtr(quad).DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Crop(Quadrangle quad, int width, int height) {
    csSmartIdEnginePINVOKE.Image_Crop__SWIG_1(swigCPtr.DangerousGetHandle(), Quadrangle.getCPtr(quad).DangerousGetHandle(), width, height);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void MaskImageRegionRectangle(Rectangle rect, int pixel_expand) {
    csSmartIdEnginePINVOKE.Image_MaskImageRegionRectangle__SWIG_0(swigCPtr.DangerousGetHandle(), Rectangle.getCPtr(rect).DangerousGetHandle(), pixel_expand);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void MaskImageRegionRectangle(Rectangle rect) {
    csSmartIdEnginePINVOKE.Image_MaskImageRegionRectangle__SWIG_1(swigCPtr.DangerousGetHandle(), Rectangle.getCPtr(rect).DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void MaskImageRegionQuadrangle(Quadrangle quad, int pixel_expand) {
    csSmartIdEnginePINVOKE.Image_MaskImageRegionQuadrangle__SWIG_0(swigCPtr.DangerousGetHandle(), Quadrangle.getCPtr(quad).DangerousGetHandle(), pixel_expand);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void MaskImageRegionQuadrangle(Quadrangle quad) {
    csSmartIdEnginePINVOKE.Image_MaskImageRegionQuadrangle__SWIG_1(swigCPtr.DangerousGetHandle(), Quadrangle.getCPtr(quad).DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void FlipVertical() {
    csSmartIdEnginePINVOKE.Image_FlipVertical(swigCPtr.DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void FlipHorizontal() {
    csSmartIdEnginePINVOKE.Image_FlipHorizontal(swigCPtr.DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

}

}
