//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace se.smartid {

public class SessionState : global::System.IDisposable {
  private global::System.Runtime.InteropServices.SafeHandle swigCPtr;
  protected bool swigCMemOwn;

  internal SessionState(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::Microsoft.Win32.SafeHandles.SafeWaitHandle(cPtr, false);
  }

  internal static global::System.Runtime.InteropServices.SafeHandle getCPtr(SessionState obj) {
    return (obj == null) ? new global::Microsoft.Win32.SafeHandles.SafeWaitHandle(global::System.IntPtr.Zero, false) : obj.swigCPtr;
  }

  ~SessionState() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr != null && swigCPtr.DangerousGetHandle() != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          csSmartIdEnginePINVOKE.delete_SessionState(swigCPtr.DangerousGetHandle());
        }
        swigCPtr = new global::Microsoft.Win32.SafeHandles.SafeWaitHandle(global::System.IntPtr.Zero, false);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public StringVector GetIntegratedFieldStateNames() {
    StringVector ret = new StringVector(csSmartIdEnginePINVOKE.SessionState_GetIntegratedFieldStateNames(swigCPtr.DangerousGetHandle()), true);
    return ret;
  }

  public bool HasIntegratedFieldState(string name) {
    bool ret = csSmartIdEnginePINVOKE.SessionState_HasIntegratedFieldState(swigCPtr.DangerousGetHandle(), name);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IntegratedFieldState GetStringFieldState(string name) {
    IntegratedFieldState ret = new IntegratedFieldState(csSmartIdEnginePINVOKE.SessionState_GetStringFieldState(swigCPtr.DangerousGetHandle(), name), false);
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetIntegratedFieldStates(IntegratedFieldStateCollection integrated_field_states) {
    csSmartIdEnginePINVOKE.SessionState_SetIntegratedFieldStates(swigCPtr.DangerousGetHandle(), IntegratedFieldStateCollection.getCPtr(integrated_field_states).DangerousGetHandle());
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public int GetSnapshotsProcessed() {
    int ret = csSmartIdEnginePINVOKE.SessionState_GetSnapshotsProcessed(swigCPtr.DangerousGetHandle());
    return ret;
  }

}

}
